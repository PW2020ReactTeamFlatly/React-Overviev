[{"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\contexts\\LoadingContext.js":"3","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\contexts\\SnackbarContext.js":"4","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\AlertComponent.js":"5","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\LoadingComponent.js":"6","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\Main.js":"7","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\FlatView.js":"8","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\CreateFlat.js":"9","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\FlatList.js":"10","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\EditFlat.js":"11","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\BookingsList.js":"12","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\BookingsListId.js":"13"},{"size":232,"mtime":1612553420433,"results":"14","hashOfConfig":"15"},{"size":1924,"mtime":1612553420421,"results":"16","hashOfConfig":"15"},{"size":159,"mtime":1612553420430,"results":"17","hashOfConfig":"15"},{"size":167,"mtime":1612553420431,"results":"18","hashOfConfig":"15"},{"size":187,"mtime":1612553420422,"results":"19","hashOfConfig":"15"},{"size":665,"mtime":1612553420426,"results":"20","hashOfConfig":"15"},{"size":1315,"mtime":1612632797824,"results":"21","hashOfConfig":"15"},{"size":4724,"mtime":1612637126183,"results":"22","hashOfConfig":"15"},{"size":9018,"mtime":1612637164324,"results":"23","hashOfConfig":"15"},{"size":7932,"mtime":1612637585801,"results":"24","hashOfConfig":"15"},{"size":10609,"mtime":1612637126181,"results":"25","hashOfConfig":"15"},{"size":13013,"mtime":1612636724131,"results":"26","hashOfConfig":"15"},{"size":13126,"mtime":1612632797820,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19lbnaf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\index.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\contexts\\LoadingContext.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\contexts\\SnackbarContext.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\AlertComponent.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\LoadingComponent.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\Main.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\FlatView.js",["57","58","59","60","61","62","63"],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\CreateFlat.js",["64","65","66","67","68","69","70","71","72","73"],"// import React from \"react\";\r\n\r\n// export default function CreateFlat() {\r\n//     return (\r\n//         <div> CreateFlat </div>\r\n//     );\r\n// }\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Link from '@material-ui/core/Link';\r\nimport axios from 'axios';\r\nimport SnackbarContext from '../contexts/SnackbarContext';\r\nimport LoadingContext from '../contexts/LoadingContext';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n//import AddressForm from './AddressForm';\r\n//import PaymentForm from './PaymentForm';\r\n//import Review from './Review';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n        width: 600,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    },\r\n    stepper: {\r\n      padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(3),\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\n  const steps = ['New flat'];\r\n  \r\n//   function getStepContent(step) {\r\n//     switch (step) {\r\n//       case 0:\r\n//         return <AddressFormm />;\r\n//       case 1:\r\n//         return <PaymentForm />;\r\n//       case 2:\r\n//         return <Review />;\r\n//       default:\r\n//         throw new Error('Unknown step');\r\n//     }\r\n//   }\r\n  \r\n  export default function Checkout() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [name, setName] = React.useState(\"\");\r\n    const [address, setAddress] = React.useState(\"\");\r\n    const [city, setCity] = React.useState(\"\");\r\n    const [price, setPrice] = React.useState(\"\");\r\n    const [btnDisabled, setBtnDisabled] = useState(true)\r\n    const [info, setInfo] = React.useState(\"\");\r\n    const [posted, setPosted] = useState(true);\r\n    const { setLoading } = useContext(LoadingContext);\r\n    const { setSnackbar } = useContext(SnackbarContext);\r\n\r\n    const handleNameChange = (event) =>{\r\n        console.log(event.target.value);\r\n        setName(event.target.value);\r\n        console.log(name);\r\n        btnEnablingCheck();\r\n    }\r\n\r\n    const handleAddressChange = (event) =>{\r\n        setAddress(event.target.value);\r\n        btnEnablingCheck();\r\n    }\r\n    const handleCityChange = (event) =>{\r\n        setCity(event.target.value);\r\n        btnEnablingCheck();\r\n    }\r\n    const handlePriceChange = (event) =>{\r\n        setPrice(event.target.value);\r\n        btnEnablingCheck();\r\n    }\r\n\r\n    const handleInfoChange = (event) =>{\r\n      setInfo(event.target.value);\r\n      btnEnablingCheck();\r\n  }\r\n\r\n    const btnEnablingCheck = () =>\r\n    {\r\n    console.log(name.length);\r\n    console.log(address.length);\r\n    console.log(city.length);\r\n    console.log(price.length);\r\n    console.log(info.length);\r\n      if(name.length>0 && address.length>0 && city.length>0 && price.length>0 && info.length>0)\r\n        setBtnDisabled(false);\r\n    }\r\n\r\n    const headers = {\r\n      'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE',\r\n      'Access-Control-Allow-Headers': 'X-Requested-With, Content-Type, X-Auth-Token, Origin, Authorization',\r\n      'security-header': 'secureMe'\r\n    }\r\n\r\n\r\nconst variable = [{\r\n  name:name,\r\n  city:city,\r\n  pricePerNight:price,\r\n  address:address,\r\n  information:info,\r\n}];\r\n\r\n    const handleNext = async () => {\r\n\r\n\r\n      console.log(name);\r\n        try\r\n        {       \r\n        await axios.post('http://localhost:8080/flats',variable);\r\n        }\r\n        catch(error) {\r\n          setPosted(false);\r\n          setSnackbar({\r\n            open: true,\r\n            type: 'error',\r\n            message: 'Not able to post new flat'\r\n        });\r\n    }\r\n      \r\n      setActiveStep(activeStep + 1);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep(activeStep - 1);\r\n    };\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Add flat view\r\n            </Typography>\r\n\r\n            \r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"primary\" \r\n            style={{ marginLeft: \"auto\" }}\r\n            component={RouterLink} to=\"/flatlist\">\r\n              Back\r\n            </Button>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            New flat\r\n            </Typography>\r\n            {/* <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper> */}\r\n            <React.Fragment>\r\n              {activeStep === steps.length ? (\r\n                \r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                  {posted === true ? \"Thank you for adding new flat.\":\"Unfortunetly there was a problem with adding new flat.\"}\r\n                  </Typography>\r\n                  \r\n                  \r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <React.Fragment>\r\n      {/* <Typography variant=\"h6\" gutterBottom>\r\n        Flat information\r\n      </Typography> */}\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12} >\r\n          <TextField\r\n            required\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            value={name}\r\n            onChange={(event) => handleNameChange(event)}            \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address\"\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n            value={address}\r\n            onChange={(event) => handleAddressChange(event)} \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            value={city}\r\n            onChange={(event) => handleCityChange(event)} \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField \r\n            id=\"pricePerNight\" \r\n            name=\"pricePerNight\" \r\n            label=\"Price per night\" \r\n            fullWidth \r\n            required\r\n            value={price}\r\n            onChange={(event) => handlePriceChange(event)} \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n        <TextField\r\n          required\r\n          id=\"informationTextField\"\r\n          label=\"Information\"\r\n          multiline\r\n          rows={4}\r\n          fullWidth\r\n          value={info}\r\n          onChange={(event) => handleInfoChange(event)} \r\n        />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n                  <div className={classes.buttons}>\r\n                    {activeStep !== 0 && (\r\n                      <Button onClick={handleBack} className={classes.button}>\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    \r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                      disabled={btnDisabled}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? 'Add flat' : 'Next'}\r\n                    </Button>\r\n                    \r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          </Paper>\r\n          \r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }",["74","75"],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\FlatList.js",["76","77","78"],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\EditFlat.js",["79","80","81","82","83","84","85","86"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Link from '@material-ui/core/Link';\r\nimport axios from 'axios';\r\nimport SnackbarContext from '../contexts/SnackbarContext';\r\nimport LoadingContext from '../contexts/LoadingContext';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['New flat'];\r\n\r\nexport default function EditFlat(props) {\r\n  const classes = useStyles();\r\n  const { flatId } = props;\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [city, setCity] = React.useState(\"\");\r\n  const [price, setPrice] = React.useState(\"\");\r\n  const [info, setInfo] = React.useState(\"\");\r\n  const [sleeps, setSleeps] = React.useState(\"\");\r\n  const [rating, setRating] = React.useState(\"\");\r\n  const [posted, setPosted] = useState(true);\r\n  const [flat, SetFlat] = useState([]);\r\n  const { setLoading } = useContext(LoadingContext);\r\n  const { setSnackbar } = useContext(SnackbarContext);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        console.log('http://localhost:8080/flats/' + flatId);\r\n        const flatData = await axios.get('http://localhost:8080/flats/' + flatId);\r\n\r\n        SetFlat(flatData.data);\r\n        console.log(flat);\r\n        if (flatData.data.name != null)\r\n          setName(flatData.data.name);\r\n        if (flatData.data.address != null)\r\n          setAddress(flatData.data.address);\r\n        if (flatData.data.city != null)\r\n          setCity(flatData.data.city);\r\n        if (flatData.data.pricePerNight != null)\r\n          setPrice(flatData.data.pricePerNight);\r\n        if (flatData.data.information != null)\r\n          setInfo(flatData.data.information);\r\n        if (flatData.data.rating != null)\r\n          setRating(flatData.data.rating);\r\n        if (flatData.data.sleeps != null)\r\n          setSleeps(flatData.data.sleeps);\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSnackbar({\r\n          open: true,\r\n          message: \"Błąd ładowania danych\",\r\n          type: \"error\"\r\n        });\r\n      }\r\n      setLoading(false);\r\n      \r\n    }\r\n\r\n    fetchData();\r\n  }, [SetFlat, setLoading, setSnackbar,]);\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const handleAddressChange = (event) => {\r\n    setAddress(event.target.value);\r\n  }\r\n  const handleCityChange = (event) => {\r\n    setCity(event.target.value);\r\n  }\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value);\r\n  }\r\n\r\n  const handleInfoChange = (event) => {\r\n    setInfo(event.target.value);\r\n  }\r\n\r\n  const handleSleepsChange = (event) =>{\r\n    setSleeps(event.target.value);\r\n}\r\nconst handleRatingChange = (event) =>{\r\n  setRating(event.target.value);\r\n}\r\n\r\n  const variable = {\r\n    id: flatId,\r\n    name: name,\r\n    city: city,\r\n    pricePerNight: price,\r\n    address: address,\r\n    information: info,\r\n    sleeps:sleeps,\r\n    rating:rating,\r\n  };\r\n\r\n  const handleNext = async () => {\r\n\r\n\r\n    console.log(name);\r\n    try {\r\n      await axios.put('http://localhost:8080/flats/' + flatId, variable);\r\n    }\r\n    catch (error) {\r\n      setPosted(false);\r\n      setSnackbar({\r\n        open: true,\r\n        type: 'error',\r\n        message: 'Not able to post changes to flat'\r\n      });\r\n    }\r\n\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Edit flat view\r\n            </Typography>\r\n\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginLeft: \"auto\" }}\r\n            component={RouterLink} to=\"/flatlist\">\r\n            Back\r\n            </Button>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Edit flat\r\n            </Typography>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  {posted === true ? \"Thank you for editing flat.\" : \"Unfortunetly there was a problem with editing flat.\"}\r\n                </Typography>\r\n\r\n\r\n              </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                  <React.Fragment>\r\n                    <Grid container spacing={3}>\r\n\r\n                      <Grid item xs={12} >\r\n                        <TextField\r\n                          required\r\n                          id=\"name\"\r\n                          name=\"name\"\r\n                          label=\"Name\"\r\n                          fullWidth\r\n                          value={name}\r\n                          onChange={(event) => handleNameChange(event)}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          required\r\n                          id=\"address\"\r\n                          name=\"address\"\r\n                          label=\"Address\"\r\n                          fullWidth\r\n                          autoComplete=\"shipping address-line1\"\r\n                          value={address}\r\n                          onChange={(event) => handleAddressChange(event)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          required\r\n                          id=\"city\"\r\n                          name=\"city\"\r\n                          label=\"City\"\r\n                          fullWidth\r\n                          autoComplete=\"shipping address-level2\"\r\n                          value={city}\r\n                          onChange={(event) => handleCityChange(event)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          id=\"sleeps\"\r\n                          name=\"sleeps\"\r\n                          label=\"Sleeps\"\r\n                          fullWidth\r\n                          required\r\n                          value={sleeps}\r\n                          onChange={(event) => handleSleepsChange(event)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          id=\"pricePerNight\"\r\n                          name=\"pricePerNight\"\r\n                          label=\"Price per night\"\r\n                          fullWidth\r\n                          required\r\n                          value={price}\r\n                          onChange={(event) => handlePriceChange(event)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          id=\"rating\"\r\n                          name=\"rating\"\r\n                          label=\"Rating\"\r\n                          fullWidth\r\n                          required\r\n                          value={rating}\r\n                          onChange={(event) => handleRatingChange(event)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12}>\r\n                      <TextField \r\n                        required\r\n                        id=\"informationTextField\"\r\n                        label=\"Information\"\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        value={info}\r\n                        onChange={(event) => handleInfoChange(event)}\r\n                      />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                  <div className={classes.buttons}>\r\n                    {activeStep !== 0 && (\r\n                      <Button onClick={handleBack} className={classes.button}>\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? 'Confirm changes' : 'Next'}\r\n                    </Button>\r\n\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n          </React.Fragment>\r\n        </Paper>\r\n\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\BookingsList.js",[],"C:\\Users\\PC\\Desktop\\ProjektNaReakta\\Wednesday-Flatly\\webapp\\src\\components\\BookingsListId.js",["87"],{"ruleId":"88","severity":1,"message":"89","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":12},{"ruleId":"88","severity":1,"message":"92","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":17},{"ruleId":"88","severity":1,"message":"93","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":12},{"ruleId":"88","severity":1,"message":"94","line":15,"column":8,"nodeType":"90","messageId":"91","endLine":15,"endColumn":16},{"ruleId":"88","severity":1,"message":"95","line":22,"column":8,"nodeType":"90","messageId":"91","endLine":22,"endColumn":14},{"ruleId":"88","severity":1,"message":"96","line":23,"column":8,"nodeType":"90","messageId":"91","endLine":23,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":85,"column":8,"nodeType":"99","endLine":85,"endColumn":43,"suggestions":"100"},{"ruleId":"88","severity":1,"message":"101","line":9,"column":27,"nodeType":"90","messageId":"91","endLine":9,"endColumn":36},{"ruleId":"88","severity":1,"message":"102","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":24},{"ruleId":"88","severity":1,"message":"103","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":16},{"ruleId":"88","severity":1,"message":"104","line":20,"column":8,"nodeType":"90","messageId":"91","endLine":20,"endColumn":15},{"ruleId":"88","severity":1,"message":"105","line":21,"column":8,"nodeType":"90","messageId":"91","endLine":21,"endColumn":12},{"ruleId":"88","severity":1,"message":"106","line":22,"column":8,"nodeType":"90","messageId":"91","endLine":22,"endColumn":17},{"ruleId":"88","severity":1,"message":"107","line":24,"column":8,"nodeType":"90","messageId":"91","endLine":24,"endColumn":24},{"ruleId":"88","severity":1,"message":"93","line":25,"column":8,"nodeType":"90","messageId":"91","endLine":25,"endColumn":12},{"ruleId":"88","severity":1,"message":"108","line":80,"column":13,"nodeType":"90","messageId":"91","endLine":80,"endColumn":23},{"ruleId":"88","severity":1,"message":"109","line":119,"column":11,"nodeType":"90","messageId":"91","endLine":119,"endColumn":18},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"88","severity":1,"message":"114","line":67,"column":7,"nodeType":"90","messageId":"91","endLine":67,"endColumn":12},{"ruleId":"88","severity":1,"message":"115","line":76,"column":10,"nodeType":"90","messageId":"91","endLine":76,"endColumn":18},{"ruleId":"97","severity":1,"message":"116","line":98,"column":8,"nodeType":"99","endLine":98,"endColumn":44,"suggestions":"117"},{"ruleId":"88","severity":1,"message":"102","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":24},{"ruleId":"88","severity":1,"message":"103","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":16},{"ruleId":"88","severity":1,"message":"104","line":12,"column":8,"nodeType":"90","messageId":"91","endLine":12,"endColumn":15},{"ruleId":"88","severity":1,"message":"105","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":12},{"ruleId":"88","severity":1,"message":"106","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":17},{"ruleId":"88","severity":1,"message":"107","line":16,"column":8,"nodeType":"90","messageId":"91","endLine":16,"endColumn":24},{"ruleId":"88","severity":1,"message":"93","line":17,"column":8,"nodeType":"90","messageId":"91","endLine":17,"endColumn":12},{"ruleId":"97","severity":1,"message":"118","line":110,"column":6,"nodeType":"99","endLine":110,"endColumn":41,"suggestions":"119"},{"ruleId":"97","severity":1,"message":"98","line":286,"column":8,"nodeType":"99","endLine":286,"endColumn":47,"suggestions":"120"},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Link' is defined but never used.","'HomeIcon' is defined but never used.","'purple' is defined but never used.","'indigo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'flatId'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'TextareaAutosize' is defined but never used.","'setLoading' is assigned a value but never used.","'headers' is assigned a value but never used.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'cards' is assigned a value but never used.","'pageSize' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'flat' and 'flatId'. Either include them or remove the dependency array.",["125"],["126"],{"desc":"127","fix":"128"},"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [SetFlat, flatId, setLoading, setSnackbar]",{"range":"135","text":"136"},"Update the dependencies array to be: [SetFlats, fetchData, setLoading, setSnackbar]",{"range":"137","text":"138"},"Update the dependencies array to be: [SetFlat, flat, flatId, setLoading, setSnackbar]",{"range":"139","text":"140"},"Update the dependencies array to be: [flatId, setBookings, setLoading, setSnackbar]",{"range":"141","text":"142"},[2655,2690],"[SetFlat, flatId, setLoading, setSnackbar]",[2945,2981],"[SetFlats, fetchData, setLoading, setSnackbar]",[3681,3716],"[SetFlat, flat, flatId, setLoading, setSnackbar]",[8981,9020],"[flatId, setBookings, setLoading, setSnackbar]"]