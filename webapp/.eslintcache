[{"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\index.js":"1","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\App.js":"2","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\contexts\\LoadingContext.js":"3","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\AlertComponent.js":"4","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\contexts\\SnackbarContext.js":"5","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\LoadingComponent.js":"6","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\Main.js":"7","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\FlatView.js":"8","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\CreateFlat.js":"9","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\FlatList.js":"10","C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\BookingsList.js":"11"},{"size":232,"mtime":1611507521582,"results":"12","hashOfConfig":"13"},{"size":1924,"mtime":1611507521575,"results":"14","hashOfConfig":"13"},{"size":159,"mtime":1611507521580,"results":"15","hashOfConfig":"13"},{"size":187,"mtime":1611507521576,"results":"16","hashOfConfig":"13"},{"size":167,"mtime":1611507521581,"results":"17","hashOfConfig":"13"},{"size":665,"mtime":1611507521579,"results":"18","hashOfConfig":"13"},{"size":861,"mtime":1611669167743,"results":"19","hashOfConfig":"13"},{"size":5654,"mtime":1611669167741,"results":"20","hashOfConfig":"13"},{"size":9178,"mtime":1611669167738,"results":"21","hashOfConfig":"13"},{"size":6334,"mtime":1611669167740,"results":"22","hashOfConfig":"13"},{"size":12189,"mtime":1611507521577,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"49p6t0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\index.js",[],["49","50"],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\App.js",[],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\contexts\\LoadingContext.js",[],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\AlertComponent.js",[],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\contexts\\SnackbarContext.js",[],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\LoadingComponent.js",[],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\Main.js",[],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\FlatView.js",["51","52","53","54","55","56","57"],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\CreateFlat.js",["58","59","60","61","62","63","64","65","66","67"],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\FlatList.js",["68"],"C:\\Users\\skask\\OneDrive\\Pulpit\\Programowanie\\React Projekt\\Wednesday-Flatly\\webapp\\src\\components\\BookingsList.js",["69","70","71"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SnackbarContext from '../contexts/SnackbarContext';\r\nimport LoadingContext from '../contexts/LoadingContext';\r\nimport axios from 'axios';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'customerName', numeric: false, disablePadding: true, label: 'Customer name' },\r\n  { id: 'startDate', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price' },\r\n  { id: 'sleeps', numeric: true, disablePadding: false, label: 'Sleeps' },\r\n  { id: 'flat_id', numeric: true, disablePadding: false, label: 'Flat' }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  const selected = props.selected;\r\n  const setSetelected = props.setSelected;\r\n\r\n  const onDeleteClick = () => {\r\n    console.log(\"delete invoke\");\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Bookings\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick = {onDeleteClick}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (<div></div>)}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { setLoading } = useContext(LoadingContext);\r\n  const { setSnackbar } = useContext(SnackbarContext);\r\n  const [bookings, setBookings] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            try {\r\n                const flatData = await axios.get('http://localhost:8080/reservations');\r\n                setBookings(flatData.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n                setSnackbar({\r\n                    open: true,\r\n                    message: \"Błąd ładowania danych\",\r\n                    type: \"error\"\r\n                });\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n    }, [setBookings, setLoading, setSnackbar,]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = bookings.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, bookings.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={bookings.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(bookings, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.customerName}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.startDate}</TableCell>\r\n                      <TableCell align=\"right\">{row.endDate}</TableCell>\r\n                      <TableCell align=\"right\">{row.price}</TableCell>\r\n                      <TableCell align=\"right\">{row.sleeps}</TableCell>\r\n                      <TableCell align=\"right\">{row.flat_id}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={bookings.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}",["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":9,"column":8,"nodeType":"80","messageId":"81","endLine":9,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":13,"column":8,"nodeType":"80","messageId":"81","endLine":13,"endColumn":17},{"ruleId":"78","severity":1,"message":"83","line":14,"column":8,"nodeType":"80","messageId":"81","endLine":14,"endColumn":12},{"ruleId":"78","severity":1,"message":"84","line":15,"column":8,"nodeType":"80","messageId":"81","endLine":15,"endColumn":16},{"ruleId":"78","severity":1,"message":"85","line":22,"column":8,"nodeType":"80","messageId":"81","endLine":22,"endColumn":14},{"ruleId":"78","severity":1,"message":"86","line":23,"column":8,"nodeType":"80","messageId":"81","endLine":23,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":85,"column":8,"nodeType":"89","endLine":85,"endColumn":43,"suggestions":"90"},{"ruleId":"78","severity":1,"message":"91","line":9,"column":27,"nodeType":"80","messageId":"81","endLine":9,"endColumn":36},{"ruleId":"78","severity":1,"message":"92","line":13,"column":8,"nodeType":"80","messageId":"81","endLine":13,"endColumn":24},{"ruleId":"78","severity":1,"message":"93","line":14,"column":8,"nodeType":"80","messageId":"81","endLine":14,"endColumn":16},{"ruleId":"78","severity":1,"message":"94","line":20,"column":8,"nodeType":"80","messageId":"81","endLine":20,"endColumn":15},{"ruleId":"78","severity":1,"message":"95","line":21,"column":8,"nodeType":"80","messageId":"81","endLine":21,"endColumn":12},{"ruleId":"78","severity":1,"message":"96","line":22,"column":8,"nodeType":"80","messageId":"81","endLine":22,"endColumn":17},{"ruleId":"78","severity":1,"message":"97","line":24,"column":8,"nodeType":"80","messageId":"81","endLine":24,"endColumn":24},{"ruleId":"78","severity":1,"message":"83","line":25,"column":8,"nodeType":"80","messageId":"81","endLine":25,"endColumn":12},{"ruleId":"78","severity":1,"message":"98","line":96,"column":13,"nodeType":"80","messageId":"81","endLine":96,"endColumn":23},{"ruleId":"78","severity":1,"message":"99","line":128,"column":11,"nodeType":"80","messageId":"81","endLine":128,"endColumn":18},{"ruleId":"78","severity":1,"message":"100","line":67,"column":7,"nodeType":"80","messageId":"81","endLine":67,"endColumn":12},{"ruleId":"78","severity":1,"message":"101","line":22,"column":8,"nodeType":"80","messageId":"81","endLine":22,"endColumn":22},{"ruleId":"78","severity":1,"message":"102","line":138,"column":9,"nodeType":"80","messageId":"81","endLine":138,"endColumn":17},{"ruleId":"78","severity":1,"message":"103","line":139,"column":9,"nodeType":"80","messageId":"81","endLine":139,"endColumn":22},{"ruleId":"74","replacedBy":"104"},{"ruleId":"76","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Link' is defined but never used.","'HomeIcon' is defined but never used.","'purple' is defined but never used.","'indigo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'flatId'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'TextareaAutosize' is defined but never used.","'setLoading' is assigned a value but never used.","'headers' is assigned a value but never used.","'cards' is assigned a value but never used.","'FilterListIcon' is defined but never used.","'selected' is assigned a value but never used.","'setSetelected' is assigned a value but never used.",["106"],["107"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [SetFlat, flatId, setLoading, setSnackbar]",{"range":"111","text":"112"},[2655,2690],"[SetFlat, flatId, setLoading, setSnackbar]"]