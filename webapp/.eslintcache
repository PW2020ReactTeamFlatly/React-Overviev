[{"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\index.js":"1","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\App.js":"2","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\contexts\\LoadingContext.js":"3","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\contexts\\SnackbarContext.js":"4","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\LoadingComponent.js":"5","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\AlertComponent.js":"6","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\Main.js":"7","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\BookingsList.js":"8","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\FlatList.js":"9","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\CreateFlat.js":"10","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\FlatView.js":"11"},{"size":232,"mtime":1611349047304,"results":"12","hashOfConfig":"13"},{"size":1924,"mtime":1611349047298,"results":"14","hashOfConfig":"13"},{"size":159,"mtime":1611349047303,"results":"15","hashOfConfig":"13"},{"size":167,"mtime":1611349047303,"results":"16","hashOfConfig":"13"},{"size":665,"mtime":1611349047302,"results":"17","hashOfConfig":"13"},{"size":187,"mtime":1611349047299,"results":"18","hashOfConfig":"13"},{"size":861,"mtime":1611674013259,"results":"19","hashOfConfig":"13"},{"size":12954,"mtime":1612056780276,"results":"20","hashOfConfig":"13"},{"size":6334,"mtime":1611674013259,"results":"21","hashOfConfig":"13"},{"size":9178,"mtime":1611674013259,"results":"22","hashOfConfig":"13"},{"size":5654,"mtime":1611674013259,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nabul6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\index.js",[],["51","52"],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\App.js",[],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\contexts\\LoadingContext.js",[],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\contexts\\SnackbarContext.js",[],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\LoadingComponent.js",[],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\AlertComponent.js",[],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\Main.js",[],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\BookingsList.js",[],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\FlatList.js",["53"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport SnackbarContext from '../contexts/SnackbarContext';\r\nimport LoadingContext from '../contexts/LoadingContext';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Grupa WednesdayFlatly\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst cards = [1, 2,3 ,4,5,6];\r\n\r\nexport default function FlatList() {\r\n  const classes = useStyles();\r\n  const { setLoading } = useContext(LoadingContext);\r\n  const { setSnackbar } = useContext(SnackbarContext);\r\n  const [flats,SetFlats] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            try {\r\n                const flatData = await axios.get('http://localhost:8080/flats');\r\n                SetFlats(flatData.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n                setSnackbar({\r\n                    open: true,\r\n                    message: \"Błąd ładowania danych\",\r\n                    type: \"error\"\r\n                });\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n    }, [SetFlats, setLoading, setSnackbar,]);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <HomeIcon className={classes.icon} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Flat List\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Flat List\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              App allows to manage all flats.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <Button   variant=\"contained\" color=\"primary\">\r\n                  <RouterLink  to=\"bookings\">\r\n                    Book List\r\n                    </RouterLink>\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                  <RouterLink  to=\"addflat\">\r\n                    Add Flat\r\n                    </RouterLink>\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {flats.map((flat) => (\r\n              <Grid item key={flat} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://bi.im-g.pl/im/85/f0/17/z25104261AMP,Mieszkanie--rynek-wtorny---zdjecie-pogladowe.jpg\"\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {flat.name}\r\n                    </Typography>\r\n                    <Typography>\r\n                      This is a media card. You can use this section to describe the content.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" >\r\n                      <RouterLink  to={\"/flatlist/\"+flat.id}>\r\n                        View\r\n                      </RouterLink>\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Edit\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Bookings\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                Cos tam w footerze\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n",["54","55"],"C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\CreateFlat.js",["56","57","58","59","60","61","62","63","64","65"],"// import React from \"react\";\r\n\r\n// export default function CreateFlat() {\r\n//     return (\r\n//         <div> CreateFlat </div>\r\n//     );\r\n// }\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Link from '@material-ui/core/Link';\r\nimport axios from 'axios';\r\nimport SnackbarContext from '../contexts/SnackbarContext';\r\nimport LoadingContext from '../contexts/LoadingContext';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n//import AddressForm from './AddressForm';\r\n//import PaymentForm from './PaymentForm';\r\n//import Review from './Review';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n        width: 600,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    },\r\n    stepper: {\r\n      padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(3),\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\n  const steps = ['New flat'];\r\n  \r\n//   function getStepContent(step) {\r\n//     switch (step) {\r\n//       case 0:\r\n//         return <AddressFormm />;\r\n//       case 1:\r\n//         return <PaymentForm />;\r\n//       case 2:\r\n//         return <Review />;\r\n//       default:\r\n//         throw new Error('Unknown step');\r\n//     }\r\n//   }\r\n  \r\n  export default function Checkout() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [name, setName] = React.useState(\"\");\r\n    const [address, setAddress] = React.useState(\"\");\r\n    const [city, setCity] = React.useState(\"\");\r\n    const [price, setPrice] = React.useState(\"\");\r\n    const [btnDisabled, setBtnDisabled] = useState(true)\r\n    const [info, setInfo] = React.useState(\"\");\r\n    const [posted, setPosted] = useState(true);\r\n    const { setLoading } = useContext(LoadingContext);\r\n    const { setSnackbar } = useContext(SnackbarContext);\r\n\r\n    const handleNameChange = (event) =>{\r\n        setName(event.target.value);\r\n        btnEnablingCheck();\r\n    }\r\n\r\n    const handleAddressChange = (event) =>{\r\n        setAddress(event.target.value);\r\n        btnEnablingCheck();\r\n    }\r\n    const handleCityChange = (event) =>{\r\n        setCity(event.target.value);\r\n        btnEnablingCheck();\r\n    }\r\n    const handlePriceChange = (event) =>{\r\n        setPrice(event.target.value);\r\n        btnEnablingCheck();\r\n    }\r\n\r\n    const handleInfoChange = (event) =>{\r\n      setInfo(event.target.value);\r\n      btnEnablingCheck();\r\n  }\r\n\r\n    const btnEnablingCheck = () =>\r\n    {\r\n      if(name.length>0 && address.length>0 && city.length>0 && price.length>0 && info.length>0)\r\n        setBtnDisabled(false);\r\n    }\r\n\r\n    const headers = {\r\n      'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE',\r\n      'Access-Control-Allow-Headers': 'X-Requested-With, Content-Type, X-Auth-Token, Origin, Authorization',\r\n      'security-header': 'secureMe'\r\n    }\r\n\r\n\r\nconst variable = [{\r\n  name:name,\r\n  city:city,\r\n  pricePerNight:price,\r\n  address:address,\r\n  information:info,\r\n}];\r\n\r\n    const handleNext = async () => {\r\n\r\n\r\n      console.log(name);\r\n        try\r\n        {       \r\n        await axios.post('http://localhost:8080/flats',variable);\r\n        }\r\n        catch(error) {\r\n          setPosted(false);\r\n          setSnackbar({\r\n            open: true,\r\n            type: 'error',\r\n            message: 'Not able to post new flat'\r\n        });\r\n    }\r\n      \r\n      setActiveStep(activeStep + 1);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep(activeStep - 1);\r\n    };\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Add flat view\r\n            </Typography>\r\n\r\n            \r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"primary\" \r\n            style={{ marginLeft: \"auto\" }}\r\n            component={RouterLink} to=\"/flatlist\">\r\n              Back\r\n            </Button>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            New flat\r\n            </Typography>\r\n            {/* <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper> */}\r\n            <React.Fragment>\r\n              {activeStep === steps.length ? (\r\n                \r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                  {posted === true ? \"Thank you for adding new flat.\":\"Unfortunetly there was a problem with adding new flat.\"}\r\n                  </Typography>\r\n                  \r\n                  \r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <React.Fragment>\r\n      {/* <Typography variant=\"h6\" gutterBottom>\r\n        Flat information\r\n      </Typography> */}\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12} >\r\n          <TextField\r\n            required\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            value={name}\r\n            onChange={(event) => handleNameChange(event)}            \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address\"\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n            value={address}\r\n            onChange={(event) => handleAddressChange(event)} \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            value={city}\r\n            onChange={(event) => handleCityChange(event)} \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField \r\n            id=\"pricePerNight\" \r\n            name=\"pricePerNight\" \r\n            label=\"Price per night\" \r\n            fullWidth \r\n            required\r\n            value={price}\r\n            onChange={(event) => handlePriceChange(event)} \r\n          />\r\n        </Grid>\r\n\r\n        <TextField\r\n          required\r\n          id=\"informationTextField\"\r\n          label=\"Information\"\r\n          multiline\r\n          rows={4}\r\n          fullWidth\r\n          value={info}\r\n          onChange={(event) => handleInfoChange(event)} \r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n                  <div className={classes.buttons}>\r\n                    {activeStep !== 0 && (\r\n                      <Button onClick={handleBack} className={classes.button}>\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    \r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                      disabled={btnDisabled}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                    </Button>\r\n                    \r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          </Paper>\r\n          \r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }","C:\\Users\\Mikołaj\\Desktop\\Wednesday-Flatly\\webapp\\src\\components\\FlatView.js",["66","67","68","69","70","71","72"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport SnackbarContext from '../contexts/SnackbarContext';\r\nimport LoadingContext from '../contexts/LoadingContext';\r\nimport axios from 'axios';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    maxWidth: 800,\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0d47a1',\r\n    },\r\n    secondary: {\r\n      main: '#115293',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function FlatView(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const {flatId} = props;\r\n\r\n    const { setLoading } = useContext(LoadingContext);\r\n  const { setSnackbar } = useContext(SnackbarContext);\r\n  const [flat,SetFlat] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            try {\r\n                const flatData = await axios.get('http://localhost:8080/flats/'+ flatId);\r\n                SetFlat(flatData.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n                setSnackbar({\r\n                    open: true,\r\n                    message: \"Błąd ładowania danych\",\r\n                    type: \"error\"\r\n                });\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n    }, [SetFlat, setLoading, setSnackbar,]);\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      \r\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Add flat view\r\n            </Typography>\r\n\r\n            \r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"primary\" \r\n            style={{ marginLeft: \"auto\" }}\r\n            component={RouterLink} to=\"/flatlist\">\r\n              {/* <RouterLink  to={\"/flatlist\"} color=\"initial\"> */}\r\n                        Back\r\n              {/* </RouterLink> */}\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n    <main className={classes.layout}>\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image=\"https://bi.im-g.pl/im/85/f0/17/z25104261AMP,Mieszkanie--rynek-wtorny---zdjecie-pogladowe.jpg\"\r\n          title=\"\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n            {flat.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" color=\"light\" component=\"p\">\r\n            {flat.information}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n            City: {flat.city}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n            Address: {flat.address}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Typography variant=\"body2\" color=\"secondary\" component=\"p\">\r\n            Flat price per night: {flat.pricePerNight}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"secondary\" component=\"p\">\r\n            Rating: {flat.rating}/10\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n    </main>\r\n    </ThemeProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n/*export default function FlatView(props) {\r\n    const {flatId} = props;\r\n\r\n    const { setLoading } = useContext(LoadingContext);\r\n  const { setSnackbar } = useContext(SnackbarContext);\r\n  const [flats,SetFlats] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            try {\r\n                const flatData = await axios.get('http://localhost:8080/flats/'+ flatId);\r\n                SetFlats(flatData.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n                setSnackbar({\r\n                    open: true,\r\n                    message: \"Błąd ładowania danych\",\r\n                    type: \"error\"\r\n                });\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n    }, [SetFlats, setLoading, setSnackbar,]);\r\n\r\n    return (\r\n        <div> FlatView + {flats.name} </div>\r\n    );\r\n}*/",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":67,"column":7,"nodeType":"79","messageId":"80","endLine":67,"endColumn":12},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","replacedBy":"82"},{"ruleId":"77","severity":1,"message":"83","line":9,"column":27,"nodeType":"79","messageId":"80","endLine":9,"endColumn":36},{"ruleId":"77","severity":1,"message":"84","line":13,"column":8,"nodeType":"79","messageId":"80","endLine":13,"endColumn":24},{"ruleId":"77","severity":1,"message":"85","line":14,"column":8,"nodeType":"79","messageId":"80","endLine":14,"endColumn":16},{"ruleId":"77","severity":1,"message":"86","line":20,"column":8,"nodeType":"79","messageId":"80","endLine":20,"endColumn":15},{"ruleId":"77","severity":1,"message":"87","line":21,"column":8,"nodeType":"79","messageId":"80","endLine":21,"endColumn":12},{"ruleId":"77","severity":1,"message":"88","line":22,"column":8,"nodeType":"79","messageId":"80","endLine":22,"endColumn":17},{"ruleId":"77","severity":1,"message":"89","line":24,"column":8,"nodeType":"79","messageId":"80","endLine":24,"endColumn":24},{"ruleId":"77","severity":1,"message":"90","line":25,"column":8,"nodeType":"79","messageId":"80","endLine":25,"endColumn":12},{"ruleId":"77","severity":1,"message":"91","line":96,"column":13,"nodeType":"79","messageId":"80","endLine":96,"endColumn":23},{"ruleId":"77","severity":1,"message":"92","line":128,"column":11,"nodeType":"79","messageId":"80","endLine":128,"endColumn":18},{"ruleId":"77","severity":1,"message":"93","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":12},{"ruleId":"77","severity":1,"message":"94","line":13,"column":8,"nodeType":"79","messageId":"80","endLine":13,"endColumn":17},{"ruleId":"77","severity":1,"message":"90","line":14,"column":8,"nodeType":"79","messageId":"80","endLine":14,"endColumn":12},{"ruleId":"77","severity":1,"message":"95","line":15,"column":8,"nodeType":"79","messageId":"80","endLine":15,"endColumn":16},{"ruleId":"77","severity":1,"message":"96","line":22,"column":8,"nodeType":"79","messageId":"80","endLine":22,"endColumn":14},{"ruleId":"77","severity":1,"message":"97","line":23,"column":8,"nodeType":"79","messageId":"80","endLine":23,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":85,"column":8,"nodeType":"100","endLine":85,"endColumn":43,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'cards' is assigned a value but never used.","Identifier","unusedVar",["102"],["103"],"'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'TextareaAutosize' is defined but never used.","'Link' is defined but never used.","'setLoading' is assigned a value but never used.","'headers' is assigned a value but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'HomeIcon' is defined but never used.","'purple' is defined but never used.","'indigo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'flatId'. Either include it or remove the dependency array.","ArrayExpression",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [SetFlat, flatId, setLoading, setSnackbar]",{"range":"107","text":"108"},[2655,2690],"[SetFlat, flatId, setLoading, setSnackbar]"]